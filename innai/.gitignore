Last login: Sun Oct 22 19:25:21 on ttys004
~ ❯ cd Projects
~/Projects ❯ ls
Botsta                    DriverRatingApp           K8s                       SVNEV.Server              SnakeMultiplayer          Websites                  innai                     openairplay               zBerufsschule
ChCC                      Eiszeit                   KeystoneJS                Seminar                   Strongbox                 course-registration       innai-production          svn                       zSchool
Deprecated                Flutter                   Minecraft-Server          SharpML                   SvNußdorf                 gpt4all                   mercury_guidance_computer svnev
DriverRating              HomeStation               PdfToEpubConverter        ShotTron                  Swift                     gpt4all-docker            nextcloud-docker-config   svnev-production
~/Projects ❯ cd innai
~/Projects/innai main +1 !2 ?1 ❯ ls
docker innai  server
~/Projects/innai main +1 !2 ?1 ❯ cd innai
~/Projects/innai/innai main +1 !2 ?1 ❯ ls
main.py venv
~/Projects/innai/innai main +1 !2 ?1 ❯ ls -a
.       ..      .idea   main.py venv
~/Projects/innai/innai main +1 !2 ?1 ❯ cd ..
~/Projects/innai main +1 !2 ?1 ❯ git status
On branch main
Your branch is up to date with 'origin/main'.
pip-log.txt
.tox/
.nox/
*.cover
*.mo
*.pot

#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
# Environments

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
	new file:   innai/main.py

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	modified:   .DS_Store
	modified:   innai/main.py

Untracked files:
  (use "git add <file>..." to include in what will be committed)
	innai/.idea/

~/Projects/innai main +1 !2 ?1 ❯ git status
On branch main
Your branch is up to date with 'origin/main'.

Changes to be committed:
  (use "git restore --staged <file>..." to unstage)
	new file:   innai/main.py

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
	modified:   .DS_Store
	modified:   innai/main.py

Untracked files:
  (use "git add <file>..." to include in what will be committed)
	innai/.idea/

~/Projects/innai main +1 !2 ?1 ❯ git add .
~/Projects/innai main +8 ❯ git status
On branch main
Your branch is up to date with 'origin/main'.
# Created by https://www.toptal.com/developers/gitignore/api/python
# Edit at https://www.toptal.com/developers/gitignore?templates=python

### Python ###
# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
#.idea/

### Python Patch ###
# Poetry local configuration file - https://python-poetry.org/docs/configuration/#local-configuration
poetry.toml

# ruff
.ruff_cache/

# LSP config files
pyrightconfig.json
# End of https://www.toptal.com/developers/gitignore/api/python
~
-- INSERT --